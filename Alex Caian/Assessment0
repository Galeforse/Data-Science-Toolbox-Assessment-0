
MALWARE USES MULTIPLE WEB SERVERS TO HAVE A PERIODIC HTTP C&C CONNECTION WHILE ITS NETFLOWS ARE NOT PERIODIC

## In this assignment, we take a look at https://mcfp.weebly.com/analysis 
## where we find an explicit analysis of tracking down a malware inducing SPAM.
## The procedure is broken down step by step, and a thorough explanation of all steps is presented as follows, from the site previously cited:

	## "While analyzing our capture CTU-Malware-Capture-Botnet-89-1 we found out that there were some strange issues with the periodicity
	## of the C&C channels. In this capture there were a lot of HTTP connections, but few of them were periodic.
	## During the analysis of the network capture we usually start looking at the NetFlows and then we move to the payload data.
	## What we found is that several periodic HTTP connections had non-periodic NetFlows. This was strange for us so we took a deeper look."

## Ignore this for now, just pasting some of the work

        ##   WORK IN PROGRESS
        
bot <- read.csv(file = "botnet.csv", header = TRUE)
botU <- bot[bot$Protocol == "UDP", ]
botT <- bot[bot$Protocol == "TCP", ]
botH <- bot[bot$Protocol == "HTTP", ]
## First look at the frequency of HTTP's
	  Prots <- tapply(bot$Protocol, bot$Protocol)
	  bot1 <- cbind(bot, Prots)
	    ## pie(bot1$Prots)
	    #png(file = "Protocols_Frequency.png")
	         par(mfrow = c(2, 2), mar = c(3, 3, 2, 1))
		          plot(x = bot1$Time, y = bot1$Prots,
	              xlab="Time elapsed", ylab = "Protocols", main = "Protocols Frequency",
	              xlim = c(0,500))
		          plot(x = bot1$Time, y = bot1$Prots,
	              xlab="Time elapsed", ylab = "Protocols", main = "Protocols Frequency",
	              xlim = c(501,1000))
		          plot(x = bot1$Time, y = bot1$Prots,
	              xlab="Time elapsed", ylab = "Protocols", main = "Protocols Frequency",
	              xlim = c(1001,1500))
		          plot(x = bot1$Time, y = bot1$Prots,
	              xlab="Time elapsed", ylab = "Protocols", main = "Protocols Frequency",
              	xlim = c(1501,2000)) 
	    #dev.off()
  
  
	# head(bot1, v)
